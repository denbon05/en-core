---
- name: Setup infra
  hosts: local

  # pre_tasks:
  #   - name: Check decrypted file for DB ip collection
  #     ansible.builtin.command:
  #       cmd: grep '$ANSIBLE_VAULT' group_vars/all/vault.yml
  #     changed_when: infra_state == 'present'
  #     failed_when: "'$ANSIBLE_VAULT' in encrypted_result.stdout"
  #     register: encrypted_result
  #     no_log: true

  tasks:
    - name: Set AWS credentials
      ansible.builtin.set_fact:
        aws:
          access_key: "{{ lookup('ansible.builtin.ini', 'aws_access_key_id', section='default', file='~/.aws/credentials') }}"
          secret_key: "{{ lookup('ansible.builtin.ini', 'aws_secret_access_key', section='default', file='~/.aws/credentials') }}"
      no_log: true

    - name: Add secrets.auto.tfvars
      ansible.builtin.template:
        src: secrets.auto.tfvars.j2
        dest: '{{ terraform_dirpath }}/secrets.auto.tfvars'
        mode: '0644'

    - name: Apply terraform infrastructure (webservers, domain)
      community.general.terraform:
        project_path: '{{ terraform_dirpath }}'
        force_init: true
        purge_workspace: false
        workspace: 'en-core'
        lock: true
        state: '{{ infra_state }}'
      register: infra

    # - ansible.builtin.debug:
    #     var: infra

    - name: Add hosts
      ansible.builtin.blockinfile:
        block: "{{ lookup('ansible.builtin.template', 'hosts.yml.j2') }}"
        mode: '0644'
        path: hosts.yaml
        insertafter: 'webservers:'
      changed_when: infra_state == 'present'

    # - name: Add db host to vault
    #   ansible.builtin.lineinfile:
    #     path: group_vars/all/vault.yml
    #     insertafter: 'db:'
    #     mode: '0644'
    #     line: '  host: {{ infra.outputs.app_db_host.value }}'
