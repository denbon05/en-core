---
- name: Prepare environment on servers
  hosts: webservers
  gather_facts: true
  become: true

  collections:
    - community.docker
    - docker.docker_compose
    - community.crypto

  roles:
    - role: geerlingguy.docker
      tags: [roles]
      docker_users:
        - '{{ ansible_env.USER }}'
    - role: geerlingguy.postgresql
      tags: [db, roles]
      become: true
      postgresql_version: '{{ db.version }}'
      postgresql_users:
        - name: postgres
          password: '{{ db.pg_pass }}'
        - name: '{{ db.username }}'
          password: '{{ db.password }}'
          role_attr_flags: CREATEDB
      postgresql_databases:
        - name: '{{ db.name }}'
          owner: '{{ db.username }}'
      postgresql_hba_entries:
        - { type: local, database: all, user: postgres, auth_method: peer }
        - { type: local, database: all, user: all, auth_method: md5 }
        - {
            type: host,
            database: all,
            user: all,
            address: '0.0.0.0/0',
            auth_method: md5,
          }
        - {
            type: host,
            database: all,
            user: all,
            address: '::1/128',
            auth_method: md5,
          }

  tasks:
    - name: Allow docker.sock access
      ansible.builtin.file:
        path: /var/run/docker.sock
        mode: '0666'

    - name: Register postgresql.conf filepath
      ansible.builtin.find:
        paths:
          - /etc/postgresql/
        file_type: file
        recurse: true
        patterns:
          - 'postgresql.conf'
      register: find_result

    - name: Allow external connection to db
      ansible.builtin.lineinfile:
        path: '{{ find_result.files[0].path }}'
        regexp: "listen_addresses = '.+'"
        line: "listen_addresses = '*'"
        owner: postgres
        group: postgres
        mode: '0644'
      notify:
        - Restart pg server

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: true

    - name: Install apt packages
      tags: [apt]
      ansible.builtin.apt:
        state: present
        pkg:
          - python3-pip
          - python3-docker

    - name: Install and upgrade pip
      tags: [pip]
      ansible.builtin.pip:
        extra_args: --upgrade
        executable: pip3
        name:
          - docker-compose
          # ? https://github.com/docker/docker-py/issues/3113#issuecomment-1531621678
          - requests==2.28.1

    - name: SSL
      tags: [ssl, cert]
      block:
        - name: Genarate a private key
          community.crypto.openssl_privatekey:
            path: '{{ ssl.privatekey_filepath }}'
            size: 2048

        - name: Ensure directory for CSR exists
          ansible.builtin.file:
            path: '{{ ssl.csr_filepath | dirname }}'
            state: directory
            mode: '0755'

        - name: Create certificate signing request
          community.crypto.openssl_csr:
            privatekey_path: '{{ ssl.privatekey_filepath }}'
            path: '{{ ssl.csr_filepath }}'

        - name: Generate a Self Signed OpenSSL certificate
          community.crypto.x509_certificate:
            path: '{{ ssl.cert_filepath }}'
            privatekey_path: '{{ ssl.privatekey_filepath }}'
            csr_path: '{{ ssl.csr_filepath }}'
            provider: selfsigned

  handlers:
    - name: Restart pg server
      ansible.builtin.service:
        name: postgresql
        state: restarted
